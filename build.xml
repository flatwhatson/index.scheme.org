<project name="scheme-index" default="dist" basedir=".">

    <condition property="isWindows">
        <os family="windows" />
    </condition>

    <condition property="isUnix">
        <os family="unix" />
    </condition>

    <target name="prepare_windows" if="isWindows">
        <echo>Detected windows environment</echo>
        <property name="exec" value="cmd"/>
        <property name="args" value="/c"/>
    </target>

    <target name="prepare_unix" if="isUnix">
        <echo>Detected unix environment</echo>
        <property name="exec" value="sh"/>
        <property name="args" value="-c"/>
    </target>

    <target name="compile-jar" depends="prepare_unix, prepare_windows">
        <exec dir="." executable="${exec}">
            <arg line="${args} 'git submodule update --init --recursive'"/>
        </exec>
        <exec dir="kawa-web-collection" executable="${exec}">
            <arg line="${args} 'mvn clean install'"/>
        </exec>
        <exec dir="." executable="${exec}">
            <arg line="${args} 'mvn clean package'"/>
        </exec>
    </target>

    <target name="compile-doc" depends="prepare_unix, prepare_windows">
        <exec dir="." executable="${exec}">
            <arg line="${args} 'asciidoctor README.adoc'"/>
        </exec>
    </target>

    <target name="compile-css" depends="prepare_unix, prepare_windows">
        <exec dir="." executable="${exec}">
            <arg line="${args} 'sass src/main/scss/main.scss static/css/scmindex.css'"/>
        </exec>
    </target>

    <target name="dist" depends="compile-jar, compile-doc, compile-css">
        <delete dir="dist" failonerror="false"/>
        <mkdir dir="dist"/>
        <copy todir="dist/solrhome">
            <fileset dir="solrhome">
                <include name="solr.xml"/>
                <include name="scmindex/core.properties"/>
                <include name="scmindex/conf/*"/>
            </fileset>
        </copy>
        <copy todir="dist/static">
            <fileset dir="static"/>
        </copy>
        <copy todir="dist/types">
            <fileset dir="types"/>
        </copy>
        <copy todir="dist/filters">
            <fileset dir="filters"/>
        </copy>
        <copy todir="dist/templates">
            <fileset dir="templates"/>
        </copy>
        <copy file="config/configuration-dist.scm" tofile="dist/config/configuration.scm"/>
        <copy file="target/scheme-index.jar" tofile="dist/scheme-index.jar"/>
        <copy file="README.adoc" tofile="dist/README.adoc"/>
        <copy file="README.html" tofile="dist/README.html"/>
        <copy file="README.html" tofile="dist/static/README.html"/>
    </target>

    <target name="distzip" depends="dist">
        <zip destfile="dist.zip" basedir="dist"/>
    </target>

    <!-- Helpers -->

    <!-- uses srfi.160.PLACEHOLDER.scm to generate actual spec files -->
    <macrodef name="generate-vector-spec">
        <attribute name="type"/>
        <attribute name="supertype"/>
        <sequential>
            <copy file="types/srfi.160.PLACEHOLDER.scm" tofile="types/srfi.160.@{type}.scm"/>
            <replace file="types/srfi.160.@{type}.scm" token="@?-SUPERTYPE" value="@{supertype}"/>
            <replace file="types/srfi.160.@{type}.scm" token="@" value="@{type}"/>
        </sequential>
    </macrodef>
    <target name="generate-vector-specs">
        <generate-vector-spec type="u8" supertype="integer?"/>
        <generate-vector-spec type="s8" supertype="integer?"/>
        <generate-vector-spec type="u16" supertype="integer?"/>
        <generate-vector-spec type="s16" supertype="integer?"/>
        <generate-vector-spec type="u32" supertype="integer?"/>
        <generate-vector-spec type="s32" supertype="integer?"/>
        <generate-vector-spec type="u64" supertype="integer?"/>
        <generate-vector-spec type="s64" supertype="integer?"/>
        <generate-vector-spec type="f32" supertype="real?"/>
        <generate-vector-spec type="f64" supertype="real?"/>
        <generate-vector-spec type="c64" supertype="number?"/>
        <generate-vector-spec type="c128" supertype="number?"/>
    </target>

</project>
